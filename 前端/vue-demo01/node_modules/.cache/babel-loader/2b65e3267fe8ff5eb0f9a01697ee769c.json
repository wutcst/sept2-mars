{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"product\",\n\n  data() {\n    return {\n      url: 'https://img.zcool.cn/community/01e2ae5a08faa2a80121985ca51755.jpg@2o.jpg',\n      form: {},\n      dialogVisible: false,\n      dialogVisible2: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 10,\n      search: '',\n      tableData: [],\n      rooms: [{\n        'name': 'outside',\n        'id': 1,\n        'gold': '1',\n        'coin': '1',\n        'descriptions': 'outside the main entrance of the university'\n      }, {\n        'name': 'theater',\n        'id': 2,\n        'gold': '2',\n        'coin': '-1',\n        'descriptions': 'in a lecture theater'\n      }, {\n        'name': 'pub',\n        'id': 3,\n        'gold': '4',\n        'coin': '8',\n        'descriptions': 'in the campus pub'\n      }, {\n        'name': 'lab',\n        'id': 4,\n        'gold': '3',\n        'coin': '-2',\n        'descriptions': 'in a computing lab'\n      }, {\n        'name': 'office',\n        'id': 5,\n        'gold': '5',\n        'coin': '6',\n        'descriptions': 'in the computing admin office'\n      }, {\n        'name': 'randomRoom',\n        'id': 6,\n        'gold': '0',\n        'coin': '0',\n        'descriptions': 'in a randomRoom'\n      }],\n      location: '',\n      gold: '',\n      coin: '',\n      descriptions: '',\n      id: '',\n      maps: [[0, 2, 3], [4, 6, 5], [0, 1, 0]]\n    };\n  },\n\n  created() {\n    this.load();\n  },\n\n  methods: {\n    open() {\n      this.$notify({\n        title: '游戏规则说明',\n        message: '巨洞探险：一个精彩的、充满想像力的复杂游戏，包括要在一个复杂的洞穴系统中找到出路、寻找隐藏的财宝、使用暗语和其他一些神秘工具，最终的目的是获得高分。',\n        duration: 4500\n      });\n    },\n\n    getRandomInt1(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min)) + min; //不含最大值，含最小值\n    },\n\n    load() {\n      request.get(\"/user\").then(res => {\n        this.tableData = res.data.records;\n        this.total = res.data.total;\n        let user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n        for (let data in res.data.records) {\n          if (res.data.records[data].id === user[\"id\"]) {\n            this.location = res.data.records[data].currentroom;\n          }\n        }\n\n        for (let index in this.rooms) {\n          let map = this.rooms[index];\n\n          if (map['name'] === this.location) {\n            this.gold = map['gold'];\n            this.coin = map['coin'];\n            this.descriptions = map['descriptions'];\n            this.id = map['id'];\n          }\n        }\n\n        if (this.location === \"randomRoom\") {\n          alert(\"您处于随机房间，将会被传送离开\");\n          let a = this.getRandomInt1(1, 5); // alert(a)\n\n          if (a === 1) {\n            this.west();\n          } else if (a === 2) {\n            this.east();\n          } else if (a === 3) {\n            this.north();\n          } else if (a === 4) {\n            this.south();\n          }\n        }\n      });\n    },\n\n    take() {\n      // this.load()\n      let oldgold;\n      let oldcoin;\n      request.get(\"/user\").then(res => {\n        let user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n        for (let data in res.data.records) {\n          if (res.data.records[data].id === user[\"id\"]) {\n            oldgold = res.data.records[data].gold;\n            oldcoin = res.data.records[data].coin;\n          }\n        } // oldgold=res.data.records[0].gold\n        // oldcoin=res.data.records[0].coin\n\n\n        let gold = (parseInt(oldgold) + parseInt(this.gold)).toString();\n        let coin = (parseInt(oldcoin) + parseInt(this.coin)).toString();\n        let data = {\n          \"id\": user[\"id\"],\n          \"name\": user[\"name\"],\n          \"password\": user[\"password\"],\n          \"gender\": user[\"gender\"],\n          \"currentroom\": res.data.records[0].currentroom,\n          \"gold\": gold,\n          \"coin\": coin\n        };\n        request.put(\"/user\", data).then(res => {\n          console.log(res);\n\n          if (res.code === \"0\") {\n            this.$message({\n              type: \"success\",\n              message: \"gold+\" + this.gold + \"  coin\" + this.coin\n            });\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            });\n          }\n\n          this.load();\n        });\n      });\n    },\n\n    west() {\n      let id = this.id;\n      let x;\n      let y;\n\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (this.maps[i][j] === id) {\n            x = i;\n            y = j;\n          }\n        }\n      }\n\n      y = y - 1;\n\n      if (x >= 0 && y >= 0 && x <= 2 && y <= 2 && this.maps[x][y] !== 0) {\n        for (let index in this.rooms) {\n          let map = this.rooms[index];\n\n          if (map['id'] === this.maps[x][y]) {\n            // this.gold=map['gold']\n            // this.coin=map['coin']\n            // this.descriptions=map['descriptions']\n            this.location = map['name'];\n            request.get(\"/user\").then(res => {\n              let user = JSON.parse(sessionStorage.getItem(\"user\"));\n              let data = {\n                \"id\": user[\"id\"],\n                \"name\": user[\"name\"],\n                \"password\": user[\"password\"],\n                \"gender\": user[\"gender\"],\n                \"currentroom\": this.location,\n                \"gold\": res.data.records[0].gold,\n                \"coin\": res.data.records[0].coin\n              };\n              request.put(\"/user\", data).then(res => {\n                if (res.code === \"0\") {\n                  this.$message({\n                    type: \"success\",\n                    message: \"成功\"\n                  });\n                } else {\n                  this.$message({\n                    type: \"error\",\n                    message: res.msg\n                  });\n                }\n\n                this.load();\n              });\n            });\n          }\n        } // this.load()\n\n      } else {\n        alert(\"此路不通\");\n      }\n    },\n\n    east() {\n      let id = this.id;\n      let x;\n      let y;\n\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (this.maps[i][j] === id) {\n            x = i;\n            y = j;\n          }\n        }\n      }\n\n      y = y + 1;\n\n      if (x >= 0 && y >= 0 && x <= 2 && y <= 2 && this.maps[x][y] !== 0) {\n        for (let index in this.rooms) {\n          let map = this.rooms[index];\n\n          if (map['id'] === this.maps[x][y]) {\n            // this.gold=map['gold']\n            // this.coin=map['coin']\n            // this.descriptions=map['descriptions']\n            this.location = map['name']; // this.id=map['id']\n\n            request.get(\"/user\").then(res => {\n              let user = JSON.parse(sessionStorage.getItem(\"user\"));\n              let data = {\n                \"id\": user[\"id\"],\n                \"name\": user[\"name\"],\n                \"password\": user[\"password\"],\n                \"gender\": user[\"gender\"],\n                \"currentroom\": this.location,\n                \"gold\": res.data.records[0].gold,\n                \"coin\": res.data.records[0].coin\n              };\n              request.put(\"/user\", data).then(res => {\n                if (res.code === \"0\") {\n                  this.$message({\n                    type: \"success\",\n                    message: \"成功\"\n                  });\n                } else {\n                  this.$message({\n                    type: \"error\",\n                    message: res.msg\n                  });\n                }\n\n                this.load();\n              });\n            });\n          }\n        } // this.load()\n\n      } else {\n        alert(\"此路不通\");\n      }\n    },\n\n    north() {\n      let id = this.id;\n      let x;\n      let y;\n\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (this.maps[i][j] === id) {\n            x = i;\n            y = j;\n          }\n        }\n      }\n\n      x = x - 1;\n\n      if (x >= 0 && y >= 0 && x <= 2 && y <= 2 && this.maps[x][y] !== 0) {\n        for (let index in this.rooms) {\n          let map = this.rooms[index];\n\n          if (map['id'] === this.maps[x][y]) {\n            // this.gold=map['gold']\n            // this.coin=map['coin']\n            // this.descriptions=map['descriptions']\n            this.location = map['name']; // this.id=map['id']\n\n            request.get(\"/user\").then(res => {\n              let user = JSON.parse(sessionStorage.getItem(\"user\"));\n              let data = {\n                \"id\": user[\"id\"],\n                \"name\": user[\"name\"],\n                \"password\": user[\"password\"],\n                \"gender\": user[\"gender\"],\n                \"currentroom\": this.location,\n                \"gold\": res.data.records[0].gold,\n                \"coin\": res.data.records[0].coin\n              };\n              request.put(\"/user\", data).then(res => {\n                if (res.code === \"0\") {\n                  this.$message({\n                    type: \"success\",\n                    message: \"成功\"\n                  });\n                } else {\n                  this.$message({\n                    type: \"error\",\n                    message: res.msg\n                  });\n                }\n\n                this.load();\n              });\n            });\n          }\n        } // this.load()\n\n      } else {\n        alert(\"此路不通\");\n      }\n    },\n\n    south() {\n      let id = this.id;\n      let x;\n      let y;\n\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (this.maps[i][j] === id) {\n            x = i;\n            y = j;\n          }\n        }\n      }\n\n      x = x + 1;\n\n      if (x >= 0 && y >= 0 && x <= 2 && y <= 2 && this.maps[x][y] !== 0) {\n        for (let index in this.rooms) {\n          let map = this.rooms[index];\n\n          if (map['id'] === this.maps[x][y]) {\n            // this.gold=map['gold']\n            // this.coin=map['coin']\n            // this.descriptions=map['descriptions']\n            this.location = map['name']; // this.id=map['id']\n\n            request.get(\"/user\").then(res => {\n              let user = JSON.parse(sessionStorage.getItem(\"user\"));\n              let data = {\n                \"id\": user[\"id\"],\n                \"name\": user[\"name\"],\n                \"password\": user[\"password\"],\n                \"gender\": user[\"gender\"],\n                \"currentroom\": this.location,\n                \"gold\": res.data.records[0].gold,\n                \"coin\": res.data.records[0].coin\n              };\n              request.put(\"/user\", data).then(res => {\n                if (res.code === \"0\") {\n                  this.$message({\n                    type: \"success\",\n                    message: \"成功\"\n                  });\n                } else {\n                  this.$message({\n                    type: \"error\",\n                    message: res.msg\n                  });\n                }\n\n                this.load();\n              });\n            });\n          }\n        } // this.load()\n\n      } else {\n        alert(\"此路不通\");\n      }\n    },\n\n    add() {\n      this.dialogVisible = true, this.form = {};\n    },\n\n    save() {\n      if (this.form.id) {\n        request.put(\"/user\", this.form).then(res => {\n          console.log(res);\n\n          if (res.code === \"0\") {\n            this.$message({\n              type: \"success\",\n              message: \"更新成功\"\n            });\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            });\n          }\n\n          this.load();\n          this.dialogVisible = false;\n        });\n      }\n    },\n\n    // eslint-disable-next-line no-unused-vars\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.dialogVisible = true;\n    },\n\n    handleEdit2() {\n      this.dialogVisible2 = true;\n    },\n\n    handleDelete(id) {\n      request.delete(\"/product/\" + id).then(res => {\n        if (res.code === \"0\") {\n          this.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          });\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          });\n        }\n\n        this.load();\n      });\n    },\n\n    handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.load();\n    },\n\n    handleCurrentChange(pageNum) {\n      this.currentPage = pageNum;\n      this.load();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["request","name","data","url","form","dialogVisible","dialogVisible2","currentPage","pageSize","total","search","tableData","rooms","location","gold","coin","descriptions","id","maps","created","load","methods","open","$notify","title","message","duration","getRandomInt1","min","max","Math","ceil","floor","random","get","then","res","records","user","JSON","parse","sessionStorage","getItem","currentroom","index","map","alert","a","west","east","north","south","take","oldgold","oldcoin","parseInt","toString","put","console","log","code","$message","type","msg","x","y","i","j","add","save","handleEdit","row","stringify","handleEdit2","handleDelete","delete","handleSizeChange","handleCurrentChange","pageNum"],"sourceRoot":"","sources":["D:\\JLSource\\软工实践2\\mars\\sept2-mars\\前端\\vue-demo01\\src\\views\\Product.vue"],"sourcesContent":["<template>\n  <el-image style=\"width: 100%; height:790px\" :src=\"url\" />\n  <div class=\"a\">\n  <el-descriptions title=\"\" :column=\"3\" border>\n    <el-descriptions-item\n        label=\"房间名\"\n        label-align=\"right\"\n        align=\"center\"\n        label-class-name=\"my-label\"\n        class-name=\"my-content\"\n        width=\"150px\"\n    >{{location}}</el-descriptions-item\n    >\n    <el-descriptions-item label=\"gold\" label-align=\"right\" align=\"center\"\n    >{{gold}}</el-descriptions-item\n    >\n    <el-descriptions-item label=\"coin\" label-align=\"right\" align=\"center\"\n    >{{coin}}</el-descriptions-item\n    >\n    <el-descriptions-item label=\"Remarks\" label-align=\"right\" align=\"center\">\n      <el-tag size=\"small\">Room</el-tag>\n    </el-descriptions-item>\n    <el-descriptions-item label=\"房间描述信息\" label-align=\"right\" align=\"center\"\n    >{{descriptions}}</el-descriptions-item\n    >\n  </el-descriptions>\n  </div>\n  <div class=\"b\">\n      <el-row class=\"mb-4\">\n        <el-button type=\"success\" plain @click=\"west\">WEST </el-button>\n        <el-button type=\"success\" plain @click=\"east\">EAST </el-button>\n        <el-button type=\"success\" plain @click=\"north\">NORTH</el-button>\n        <el-button type=\"success\" plain @click=\"south\">SOUTH</el-button>\n        <el-button type=\"warning\" plain @click=\"take\">TAKE</el-button>\n        <el-button type=\"primary\" plain @click=\"open\">rule</el-button>\n<!--        <el-button type=\"primary\" plain @click=\"open\">SAVE</el-button>-->\n      </el-row>\n  </div>\n<!--  <el-empty-->\n<!--      image=\"https://shadow.elemecdn.com/app/element/hamburger.9cf7b091-55e9-11e9-a976-7f4d0b07eef6.png\"-->\n<!--  >-->\n<!--  </el-empty>-->\n<!--  <div class=\"demo-image\">-->\n<!--      <el-image style=\"width: 100px; height: 100px\" :src=\"url\" />-->\n<!--  </div>-->\n</template>\n\n<script>\nimport request from \"@/utils/request\";\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"product\",\n  data(){\n    return{\n      url:'https://img.zcool.cn/community/01e2ae5a08faa2a80121985ca51755.jpg@2o.jpg',\n      form:{},\n      dialogVisible:false,\n      dialogVisible2:false,\n      currentPage:1,\n      pageSize:10,\n      total:10,\n      search:'',\n      tableData:[],\n      rooms:[{'name':'outside','id':1,'gold':'1','coin':'1','descriptions':'outside the main entrance of the university'},\n        {'name':'theater','id':2,'gold':'2','coin':'-1','descriptions':'in a lecture theater'},\n        {'name':'pub','id':3,'gold':'4','coin':'8','descriptions':'in the campus pub'},\n        {'name':'lab','id':4,'gold':'3','coin':'-2','descriptions':'in a computing lab'},\n        {'name':'office','id':5,'gold':'5','coin':'6','descriptions':'in the computing admin office'},\n        {'name':'randomRoom','id':6,'gold':'0','coin':'0','descriptions':'in a randomRoom'}],\n      location:'',\n      gold:'',\n      coin:'',\n      descriptions:'',\n      id:'',\n      maps:[[0,2,3], [4,6,5], [0,1,0]]\n    }\n  },\n  created() {\n    this.load()\n  },\n  methods:{\n    open(){\n      this.$notify({\n        title: '游戏规则说明',\n        message: '巨洞探险：一个精彩的、充满想像力的复杂游戏，包括要在一个复杂的洞穴系统中找到出路、寻找隐藏的财宝、使用暗语和其他一些神秘工具，最终的目的是获得高分。',\n        duration: 4500\n      });\n    },\n    getRandomInt1(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //不含最大值，含最小值\n     },\n\nload(){\n      request.get(\"/user\"\n      ).then(res=>{\n        this.tableData=res.data.records\n        this.total=res.data.total\n        let user=JSON.parse(sessionStorage.getItem(\"user\"))\n        for(let data in res.data.records){\n          if(res.data.records[data].id===user[\"id\"]){\n            this.location=res.data.records[data].currentroom\n          }\n        }\n        for(let index in this.rooms){\n            let map=this.rooms[index]\n            if(map['name']===this.location){\n              this.gold=map['gold']\n              this.coin=map['coin']\n              this.descriptions=map['descriptions']\n              this.id=map['id']\n          }\n        }\n        if(this.location===\"randomRoom\"){\n          alert(\"您处于随机房间，将会被传送离开\")\n          let a=this.getRandomInt1(1,5)\n          // alert(a)\n          if(a===1){\n            this.west()\n          }else if(a===2){\n            this.east()\n          }else if(a===3){\n            this.north()\n          }else if(a===4){\n            this.south()\n          }\n        }\n      })\n    },\n    take(){\n      // this.load()\n      let oldgold\n      let oldcoin\n      request.get(\"/user\"\n      ).then(res=>{\n        let user=JSON.parse(sessionStorage.getItem(\"user\"))\n        for(let data in res.data.records){\n          if(res.data.records[data].id===user[\"id\"]){\n            oldgold=res.data.records[data].gold\n            oldcoin=res.data.records[data].coin\n          }\n        }\n        // oldgold=res.data.records[0].gold\n        // oldcoin=res.data.records[0].coin\n        let gold=(parseInt(oldgold)+parseInt(this.gold)).toString()\n        let coin=(parseInt(oldcoin)+parseInt(this.coin)).toString()\n        let data={\"id\":user[\"id\"],\"name\":user[\"name\"],\"password\":user[\"password\"],\"gender\":user[\"gender\"],\"currentroom\":res.data.records[0].currentroom,\"gold\":gold,\"coin\":coin}\n        request.put(\"/user\",data).then(res => {\n          console.log(res)\n          if(res.code===\"0\"){\n            this.$message({\n              type:\"success\",\n              message:\"gold+\"+this.gold+\"  coin\"+this.coin\n            })\n          }else {\n            this.$message({\n              type:\"error\",\n              message:res.msg\n            })\n          }\n          this.load()\n        })\n      })\n\n    },\n    west(){\n      let id=this.id\n      let x;\n      let y;\n      for(let i=0;i<3;i++){\n        for(let j=0;j<3;j++){\n          if(this.maps[i][j]===id){\n            x=i;\n            y=j;\n          }\n        }\n      }\n      y=y-1\n      if(x>=0&&y>=0&&x<=2&&y<=2&&this.maps[x][y]!==0){\n        for(let index in this.rooms){\n          let map=this.rooms[index]\n          if(map['id']===this.maps[x][y]){\n            // this.gold=map['gold']\n            // this.coin=map['coin']\n            // this.descriptions=map['descriptions']\n            this.location=map['name']\n            request.get(\"/user\"\n            ).then(res=>{\n            let user=JSON.parse(sessionStorage.getItem(\"user\"))\n            let data={\"id\":user[\"id\"],\"name\":user[\"name\"],\"password\":user[\"password\"],\"gender\":user[\"gender\"],\"currentroom\":this.location,\"gold\":res.data.records[0].gold,\"coin\":res.data.records[0].coin}\n            request.put(\"/user\",data).then(res => {\n              if(res.code===\"0\"){\n                this.$message({\n                  type:\"success\",\n                  message:\"成功\"\n                })\n              }else {\n                this.$message({\n                  type:\"error\",\n                  message:res.msg\n                })\n              }\n              this.load()\n            })\n            })\n          }\n        }\n        // this.load()\n      }else {\n        alert(\"此路不通\")\n      }\n\n\n    },\n    east(){\n      let id=this.id\n      let x;\n      let y;\n      for(let i=0;i<3;i++){\n        for(let j=0;j<3;j++){\n          if(this.maps[i][j]===id){\n            x=i;\n            y=j;\n          }\n        }\n      }\n      y=y+1\n      if(x>=0&&y>=0&&x<=2&&y<=2&&this.maps[x][y]!==0){\n        for(let index in this.rooms){\n          let map=this.rooms[index]\n          if(map['id']===this.maps[x][y]){\n            // this.gold=map['gold']\n            // this.coin=map['coin']\n            // this.descriptions=map['descriptions']\n            this.location=map['name']\n            // this.id=map['id']\n            request.get(\"/user\"\n            ).then(res=>{\n              let user=JSON.parse(sessionStorage.getItem(\"user\"))\n              let data={\"id\":user[\"id\"],\"name\":user[\"name\"],\"password\":user[\"password\"],\"gender\":user[\"gender\"],\"currentroom\":this.location,\"gold\":res.data.records[0].gold,\"coin\":res.data.records[0].coin}\n              request.put(\"/user\",data).then(res => {\n                if(res.code===\"0\"){\n                  this.$message({\n                    type:\"success\",\n                    message:\"成功\"\n                  })\n                }else {\n                  this.$message({\n                    type:\"error\",\n                    message:res.msg\n                  })\n                }\n                this.load()\n              })\n            })\n          }\n        }\n        // this.load()\n      }else {\n        alert(\"此路不通\")\n      }\n    },\n    north(){\n      let id=this.id\n      let x;\n      let y;\n      for(let i=0;i<3;i++){\n        for(let j=0;j<3;j++){\n          if(this.maps[i][j]===id){\n            x=i;\n            y=j;\n          }\n        }\n      }\n      x=x-1\n      if(x>=0&&y>=0&&x<=2&&y<=2&&this.maps[x][y]!==0){\n        for(let index in this.rooms){\n          let map=this.rooms[index]\n          if(map['id']===this.maps[x][y]){\n            // this.gold=map['gold']\n            // this.coin=map['coin']\n            // this.descriptions=map['descriptions']\n            this.location=map['name']\n            // this.id=map['id']\n            request.get(\"/user\"\n            ).then(res=>{\n              let user=JSON.parse(sessionStorage.getItem(\"user\"))\n              let data={\"id\":user[\"id\"],\"name\":user[\"name\"],\"password\":user[\"password\"],\"gender\":user[\"gender\"],\"currentroom\":this.location,\"gold\":res.data.records[0].gold,\"coin\":res.data.records[0].coin}\n              request.put(\"/user\",data).then(res => {\n                if(res.code===\"0\"){\n                  this.$message({\n                    type:\"success\",\n                    message:\"成功\"\n                  })\n                }else {\n                  this.$message({\n                    type:\"error\",\n                    message:res.msg\n                  })\n                }\n                this.load()\n              })\n            })\n          }\n        }\n        // this.load()\n      }else {\n        alert(\"此路不通\")\n      }\n\n\n    },\n    south(){\n      let id=this.id\n      let x;\n      let y;\n      for(let i=0;i<3;i++){\n        for(let j=0;j<3;j++){\n          if(this.maps[i][j]===id){\n            x=i;\n            y=j;\n          }\n        }\n      }\n      x=x+1\n      if(x>=0&&y>=0&&x<=2&&y<=2&&this.maps[x][y]!==0){\n        for(let index in this.rooms){\n          let map=this.rooms[index]\n          if(map['id']===this.maps[x][y]){\n            // this.gold=map['gold']\n            // this.coin=map['coin']\n            // this.descriptions=map['descriptions']\n            this.location=map['name']\n            // this.id=map['id']\n            request.get(\"/user\"\n            ).then(res=>{\n              let user=JSON.parse(sessionStorage.getItem(\"user\"))\n              let data={\"id\":user[\"id\"],\"name\":user[\"name\"],\"password\":user[\"password\"],\"gender\":user[\"gender\"],\"currentroom\":this.location,\"gold\":res.data.records[0].gold,\"coin\":res.data.records[0].coin}\n              request.put(\"/user\",data).then(res => {\n                if(res.code===\"0\"){\n                  this.$message({\n                    type:\"success\",\n                    message:\"成功\"\n                  })\n                }else {\n                  this.$message({\n                    type:\"error\",\n                    message:res.msg\n                  })\n                }\n                this.load()\n              })\n            })\n          }\n        }\n        // this.load()\n      }else {\n        alert(\"此路不通\")\n      }\n\n    },\n    add(){\n      this.dialogVisible=true,\n          this.form={}\n    },\n    save(){\n      if(this.form.id){\n        request.put(\"/user\",this.form).then(res => {\n          console.log(res)\n          if(res.code===\"0\"){\n            this.$message({\n              type:\"success\",\n              message:\"更新成功\"\n            })\n          }else {\n            this.$message({\n              type:\"error\",\n              message:res.msg\n            })\n          }\n          this.load()\n          this.dialogVisible=false\n        })\n      }\n    },\n    // eslint-disable-next-line no-unused-vars\n    handleEdit(row){\n      this.form = JSON.parse(JSON.stringify(row))\n      this.dialogVisible = true\n    },\n    handleEdit2(){\n      this.dialogVisible2 = true\n    },\n    handleDelete(id){\n      request.delete(\"/product/\"+id).then(res=>{\n        if(res.code===\"0\"){\n          this.$message({\n            type:\"success\",\n            message:\"删除成功\"\n          })\n        }else {\n          this.$message({\n            type:\"error\",\n            message:res.msg\n          })\n        }\n        this.load()\n      })\n    },\n    handleSizeChange(pageSize){\n      this.pageSize=pageSize\n      this.load()\n    },\n    handleCurrentChange(pageNum){\n      this.currentPage=pageNum\n      this.load()\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n.a{\n  margin: auto;\n  position: absolute;\n  top: 50px;\n  left: 200px;\n  right: 0;\n  bottom: 0;\n}\n.b{\n  margin: auto;\n  position: absolute;\n  top: 160px;\n  left: 500px;\n  right: 0;\n  bottom: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}