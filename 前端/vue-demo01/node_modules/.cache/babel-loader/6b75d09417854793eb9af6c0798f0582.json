{"ast":null,"code":"/**\n * 请求登录验证，如果没有登录，不能访问页面，返回到登录页面\n */\nimport router from \"@/router\"; //路由判断登录，根据路由配置文件的参数\n\nrouter.beforeEach((to, from, next) => {\n  //判断该路由是否需要登录权限\n  //record.meta.requireAuth是获取到该请求中携带的该参数\n  if (to.matched.some(record => record.meta.requireAuth)) {\n    //获取到本地的token\n    const user = sessionStorage.getItem(\"user\"); // console.log(\"显示token----------：\" + token)\n    //判断当前的token是否存在，也就是登录时的token\n\n    if (user) {\n      //如果指向的是登录页面，不做任何操作\n      // eslint-disable-next-line no-empty\n      if (to.path === \"/login\") {} else {\n        //如果不是登录页面，且token存在，就放行\n        next();\n      }\n    } else {\n      //    如果token不存在\n      //    前往登录\n      next({\n        path: '/login'\n      });\n    }\n  } else {\n    //如果不需要登录认证，就直接访问\n    next();\n  }\n});","map":{"version":3,"sources":["D:/JLSource/软工实践2/mars/sept2-mars/前端/vue-demo01/src/utils/permission.js"],"names":["router","beforeEach","to","from","next","matched","some","record","meta","requireAuth","user","sessionStorage","getItem","path"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,UAAnB,C,CAEA;;AACAA,MAAM,CAACC,UAAP,CAAkB,CAACC,EAAD,EAAIC,IAAJ,EAASC,IAAT,KAAgB;AAC9B;AACA;AACA,MAAIF,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgBC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,WAAtC,CAAJ,EAAuD;AACnD;AACA,UAAMC,IAAI,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAb,CAFmD,CAGnD;AAEA;;AACA,QAAIF,IAAJ,EAAS;AACL;AACA;AACA,UAAIR,EAAE,CAACW,IAAH,KAAY,QAAhB,EAAyB,CAExB,CAFD,MAEM;AACF;AACAT,QAAAA,IAAI;AACP;AACJ,KATD,MASM;AACF;AACA;AACAA,MAAAA,IAAI,CAAC;AAACS,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAJ;AACH;AAEJ,GArBD,MAqBM;AACF;AACAT,IAAAA,IAAI;AACP;AACJ,CA5BD","sourcesContent":["/**\n * 请求登录验证，如果没有登录，不能访问页面，返回到登录页面\n */\nimport router from \"@/router\";\n\n//路由判断登录，根据路由配置文件的参数\nrouter.beforeEach((to,from,next)=>{\n    //判断该路由是否需要登录权限\n    //record.meta.requireAuth是获取到该请求中携带的该参数\n    if (to.matched.some(record => record.meta.requireAuth)){\n        //获取到本地的token\n        const user = sessionStorage.getItem(\"user\")\n        // console.log(\"显示token----------：\" + token)\n\n        //判断当前的token是否存在，也就是登录时的token\n        if (user){\n            //如果指向的是登录页面，不做任何操作\n            // eslint-disable-next-line no-empty\n            if (to.path === \"/login\"){\n\n            }else {\n                //如果不是登录页面，且token存在，就放行\n                next()\n            }\n        }else {\n            //    如果token不存在\n            //    前往登录\n            next({path:'/login'})\n        }\n\n    }else {\n        //如果不需要登录认证，就直接访问\n        next()\n    }\n})"]},"metadata":{},"sourceType":"module"}